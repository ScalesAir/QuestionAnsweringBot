from aiogram import types, Dispatcher
from functions.message_func import send_msg, answer_msg
from data_base.sqlite_bd import find_column
from functions.other_func import data_from_database_row
from handlers.registration_users import registration

from logs import logging


logger = logging.getLogger("app.handlers.start")

__all__ = ['registration_handlers_start',
           'welcome']


async def welcome(message: types.Message):
    """–§—É–Ω–∫—Ü–∏—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –µ—Å–ª–∏ –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–µ–ª–µ–≥—Ä–∞–º –ë–æ—Ç—É –∫–æ–º–∞–Ω–¥—ã /start –∏–ª–∏ /help

    :param message:
    :return:
    """
    await message.delete()
    temp = await find_column('users', 'telegram_id', message.from_user.id)
    telegram_id = await data_from_database_row(temp, 0)
    await send_msg(message, f'–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫! ü§ó\n–Ø –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –û–î–°,\n'
                            f'–º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –µ—â—ë –≤ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –±—É–¥–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –ø–æ –º–µ—Ä–µ –æ–±—â–µ–Ω–∏—è —Å –ª—é–¥—å–º–∏.',
                   spec_chat_id=message.from_user.id)
    if not telegram_id:
        await registration(message)
    else:
        pass
        await answer_msg(message, '–ß–µ–º —è –º–æ–≥—É –í–∞–º –ø–æ–º–æ—á—å?')
        # await entering_a_question(message)


def registration_handlers_start(_dp: Dispatcher):
    """–§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –•–µ–Ω–¥–ª–µ—Ä–æ–≤, –ø—Ä–∏ —ç—Ç–æ–º –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä—ã –Ω–µ –Ω—É–∂–Ω—ã

    :param _dp:
    :return:
    """

    _dp.register_message_handler(welcome, commands=['start', 'help'])
